{% extends "admin/base.jinja" %}
{% block content %}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>

<h1 class="mt-5">New user</h1>
<div class="section">
    <form method="post" class="mt-5">
        <div class="form-group mb-4">
            <label for="displayName">Display name</label>
            <input type="text" class="form-control" id="displayName" name="note" value="">
        </div>
        <div class="form-group mb-4">
            <label for="monthly_traffic">Monthly traffic (GB)</label>
            <div class="input-group">  
                <div class="input-group-text">
                    <input class="form-check-input mt-0" type="checkbox" value="on" id="monthly_traffic_unlimited" name="monthly_traffic_unlimited" checked>
                    <label class="form-check-label mx-2" for="monthly_traffic_unlimited">
                        Unlimited
                    </label>
                </div>
                <input type="number" class="form-control" id="monthly_traffic" name="monthly_traffic" value="">
            </div>
            <div style="opacity: 0.75; font-size: 12px;" class="mb-3">
                Monthly traffic limit resets on the first day of each month.
            </div>
        </div>
        <div style="clear: both;"></div>
        <div class="form-group mb-4">
            <label for="user_active_until">User active until</label>
            <div class="input-group">  
                <div class="input-group-text">
                    <input class="form-check-input mt-0" type="checkbox" value="on" id="user_active_until_unlimited" name="user_active_until_unlimited" checked>
                    <label class="form-check-label mx-2" for="user_active_until_unlimited">
                        Forever
                    </label>
                </div>
                <input type="number" class="form-control" id="user_active_until" name="user_active_until" value="">
            </div>
            <div style="opacity: 0.9; font-size: 14px; text-align: right" class="mb-3 user-active-hint">
            </div>
        </div>
        <div class="form-group mb-4">
            <label for="max_ips">Max concurrent IPs to connect</label>
            <div class="input-group mb-3">  
                <div class="input-group-text">
                    <input class="form-check-input mt-0" type="checkbox" value="on" id="max_ips_default" name="max_ips_default" checked>
                    <label class="form-check-label mx-2" for="max_ips_default">
                        Default
                    </label>
                </div>
                <input type="number" class="form-control" id="max_ips" name="max_ips" value="{{ max_ips }}">
            </div>
        </div>

        <button type="submit" class="btn btn-primary">Save</button>
    </form>
</div>
<script>
    document.getElementById('max_ips_default').addEventListener('change', function() {
        document.getElementById('max_ips').disabled = this.checked;
        if (this.checked) {
            document.getElementById('max_ips').value = '{{ default_max_ips_count }}';
        }
    });
    document.getElementById('max_ips_default').dispatchEvent(new Event('change'));

    document.getElementById('monthly_traffic_unlimited').addEventListener('change', function() {
        document.getElementById('monthly_traffic').disabled = this.checked;
        if (this.checked) {
            document.getElementById('monthly_traffic').value = '';
        } else {
            document.getElementById('monthly_traffic').value = '50';
        }
    });
    document.getElementById('monthly_traffic_unlimited').dispatchEvent(new Event('change'));

    function getUserActiveDefaultDate() {
        var expireDate = new Date();
        expireDate.setFullYear(expireDate.getFullYear() + 1);
        return expireDate.getFullYear() + '-' + (expireDate.getMonth() + 1).toString().padStart(2, '0') + '-' + expireDate.getDate().toString().padStart(2, '0') + ' ' + expireDate.getHours().toString().padStart(2, '0') + ':' + expireDate.getMinutes().toString().padStart(2, '0');
    }

    function updateUserActiveUntilHint() {
        if (document.getElementById('user_active_until_unlimited').checked) {
            document.querySelector('.user-active-hint').innerHTML = '';
            document.querySelector('.user-active-hint').style.color = 'green';
            return;
        }
    
        var expireDateString = document.getElementById('user_active_until').value; // yyyy-mm-dd hh:mm
        var expireDate = new Date(expireDateString);
        var today = new Date();
        var diff = expireDate - today;
        var days = Math.round(diff / (1000 * 60 * 60 * 24));
        if (days < 0) {
            document.querySelector('.user-active-hint').innerHTML = 'Expired';
            document.querySelector('.user-active-hint').style.color = 'red';
        } else if (days == 0) {
            document.querySelector('.user-active-hint').innerHTML = 'Expires today';
            document.querySelector('.user-active-hint').style.color = 'orange';
        } else {
            document.querySelector('.user-active-hint').innerHTML = 'Expires in ' + days + ' days';
            document.querySelector('.user-active-hint').style.color = 'green';
        }
    }
    setTimeout(updateUserActiveUntilHint, 200);

    document.getElementById('user_active_until_unlimited').addEventListener('change', function() {
        document.getElementById('user_active_until').disabled = this.checked;
        if (this.checked) {
            setTimeout(function() {
                document.getElementById('user_active_until').value = '';
            }, 100);
        } else {
            document.getElementById('user_active_until').value = getUserActiveDefaultDate();
            updateUserActiveUntilHint();
        }
    });
    document.getElementById('user_active_until_unlimited').dispatchEvent(new Event('change'));


    document.getElementById('user_active_until').addEventListener('change', function() {
        updateUserActiveUntilHint();
    });

    flatpickr('#user_active_until', {
        enableTime: true,
        dateFormat: "Y-m-d H:i",
        time_24hr: true,
        position: 'above',
        defaultDate: getUserActiveDefaultDate(),
        onChange: function(selectedDates, dateStr, instance) {
            setTimeout(updateUserActiveUntilHint, 100);
        },
        onOpen: function(selectedDates, dateStr, instance) {
            instance.setDate(document.getElementById('user_active_until').value);
            console.log('open');
            console.log(instance);

            setTimeout(function() {
                // create a div as the first element in the calendar container
                var extra = document.createElement('div');
                extra.classList.add('flatpickr-calendar-extra');

                // create 1 month, 2 months, 3 months, 6 months, 1 year buttons
                var today = new Date();
                var months = [1, 2, 3, 6, 12, 24, 'Forever'];
                months.forEach(function (month) {
                    var button = document.createElement('button');
                    button.classList.add('btn', 'btn-light');
                    button.style.flexGrow = 1;
                    if (month == 'Forever')
                        button.innerHTML = 'Forever';
                    else if (month % 12 == 0)
                        button.innerHTML = month / 12 + ' year' + (month / 12 > 1 ? 's' : '');
                    else
                        button.innerHTML = month + ' month' + (month > 1 ? 's' : '');
                    button.addEventListener('click', function() {
                        if (month == 'Forever') {
                            document.getElementById('user_active_until_unlimited').checked = true;
                            document.getElementById('user_active_until_unlimited').dispatchEvent(new Event('change'));
                            instance.close();
                        } else {
                            var newDate = new Date(today);
                            newDate.setMonth(newDate.getMonth() + month);
                            instance.setDate(newDate);
                        }
                        updateUserActiveUntilHint();
                    });
                    extra.appendChild(button);
                });

                instance.calendarContainer.insertBefore(extra, instance.calendarContainer.firstChild);
            }, 100);
        },
        onClose: function(selectedDates, dateStr, instance) {
            console.log('close');
            instance.calendarContainer.removeChild(instance.calendarContainer.querySelector('.flatpickr-calendar-extra'));
        }
    });
</script>
<style>
.flatpickr-calendar-extra {
    height: 100%;
    width: 150px;
    background: white;
    position: absolute;
    right: -154px;
    box-shadow: 1px 0 0 #e6e6e6, -1px 0 0 #e6e6e6, 0 1px 0 #e6e6e6, 0 -1px 0 #e6e6e6, 0 3px 13px rgba(0,0,0,0.08);
    border-radius: 4px;
    animation: fadeIn 0.2s ease-in-out forwards;
    display: flex;
    flex-direction: column;
    align-items: stretch;
    justify-content: space-around;
}

@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateX(10px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}
</style>


{% endblock %}
