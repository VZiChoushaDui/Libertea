{% extends "admin/base.jinja" %}
{% block content %}
<link
  rel="stylesheet"
  href="https://cdn.jsdelivr.net/gh/lipis/flag-icons@6.6.6/css/flag-icons.min.css"
/>

<div class="mt-4 px-2">
    <a class="btn btn-primary float-start float-sm-end mx-1 mb-1" href="/{{ admin_uuid }}/domains/new/">
        Add new domain
    </a>
    <a class="btn btn-primary add-proxy-button float-start float-sm-end mx-1 mb-1" href="/{{ admin_uuid }}/proxies/new/">
        Add new secondary proxy
    </a>
</div>
<div style="clear: both"></div>

<div class="mx-3">
    <h6 class="bordered">Panel Domain</h6>
</div>
<div class="list-group list-group-flush mt-2">
    <a href="#" class="list-group-item list-group-item-action">
        <div class="row">
            <div class="col-12 list-item-title">
                {{ panel_domain }}
            </div>
            <div class="col-6 list-item-subtitle">
                <i class="fa-solid fa-check check-icon"></i> Active
            </div>
        </div>
    </a>
</div>

<div style="clear: both"></div>
<div class="mx-3 mt-5">
    <h6 class="bordered">Primary Domains</h6>
</div>
<div class="route-section-text mt-2 mx-3">
    Primary domains are connected to your main Libertea server IP. You're advised to use a CDN to improve availability and performance, but you can also use a primary domain without a CDN.
</div>
<div class="list-group list-group-flush mt-2">
    {% for domain in domains %}
        <a href="/{{ admin_uuid }}/domains/{{ domain.id }}/" class="list-group-item list-group-item-action">
            <div class="row">
                <div class="col-12 list-item-title">
                    {{ domain.id }}
                    {% if domain.tier != None %}<div class="list-item-badge">{{ domain.tier }}</div>{% endif %}
                    {% if domain.warning %} <i class="fa-solid fa-circle-exclamation warning-icon"></i> {% endif %}
                    <i class="list-item-arrow fa-solid fa-chevron-right"></i>
                </div>
                <div class="col-7 list-item-subtitle">
                    {% if domain.status == 'active' %}
                    <i class="fa-solid fa-check check-icon"></i> Active <i class="fa-solid fa-cloud-bolt cloud-icon"></i>
                    {% elif domain.status == 'inactive' %}
                    <i class="fa-solid fa-xmark error-icon"></i> Inactive, click for details
                    {% elif domain.status == 'cdn-disabled' %}
                    <i class="fa-solid fa-check check-icon"></i> Active
                    <span class="ip-flag fi fis mx-1" data-ip="{{ domain.ip }}" style="border-radius: 50%;"></span>
                    {% elif domain.status == 'redirect-loop' %}
                    <i class="fa-solid fa-xmark error-icon"></i> CDN Misconfigured
                    {% else %}
                    <i class="fa-solid fa-circle-exclamation warning-icon"></i> Unknown status
                    {% endif %}
                </div>
                <div class="col-5 list-item-subtitle" style="text-align: right;">
                    {% if health_check %}
                    Availability: <span class="health-percent spinner text-spinner small-spinner" data-domainid="{{ domain.id }}">⌛</span>
                    {% endif %}
                </div>
            </div>
        </a>
    {% endfor %}
</div>
<div class="mx-3 mt-5">
    <h6 class="bordered">Secondary Proxies</h6>
</div>

<div class="route-section-text mt-2 mx-3">
    Secondary proxies allow users to connect to your Libertea via other routes (including servers in other countries),
    to increase availability and reliability. You can add as many secondary proxies as you want. 
</div>

<div class="list-group list-group-flush mt-2">
    {% for proxy in proxies %}
        <a href="/{{ admin_uuid }}/domains/{{ proxy.ip }}/" class="list-group-item list-group-item-action">
            <div class="row">
                <div class="col-12 list-item-title">
                    {{ proxy.ip }}
                    {% if proxy.domains | length > 0 %}
                    | {% for domain in proxy.domains %}{{ domain }}{% if not loop.last %}, {% endif %}{% endfor %}
                    {% endif %}
                    {% if proxy.tier != None %}<div class="list-item-badge">{{ proxy.tier }}</div>{% endif %}
                    {% if proxy.online and (proxy.update_available or proxy.domains | length == 0) %}<i class="fa-solid fa-circle-exclamation warning-icon"></i>{% endif %}
                    <i class="list-item-arrow fa-solid fa-chevron-right"></i>
                </div>
                <div class="col-6 list-item-subtitle">
                    {% if not proxy.online %}
                    <i class="fa-solid fa-xmark error-icon"></i> Inactive, click for details
                    <span class="ip-flag fi fis mx-1" data-ip="{{ proxy.ip }}" style="border-radius: 50%;"></span>
                    {% elif proxy.update_available %}
                    <i class="fa-solid fa-check check-icon"></i> Active, update available
                    <span class="ip-flag fi fis mx-1" data-ip="{{ proxy.ip }}" style="border-radius: 50%;"></span>
                    {% else %}
                    <i class="fa-solid fa-check check-icon"></i> Active
                    <span class="ip-flag fi fis mx-1" data-ip="{{ proxy.ip }}" style="border-radius: 50%;"></span>
                    {% endif %}
                </div>
                <div class="col-6 list-item-subtitle" style="text-align: right;">
                    {% if health_check %}
                    Availability: <span class="health-percent spinner text-spinner small-spinner" data-domainid="{% if proxy.domains | length > 0 %}{{ proxy.domains[0] }}{% else %}{{ proxy.ip }}{% endif %}">⌛</span>
                    {% endif %}
                </div>
            </div>
        </a>
    {% endfor %}
</div>

{% if health_check %}
<script>
    document.querySelectorAll('.health-percent').forEach(elem => {
        fetch('/{{admin_uuid}}/health/' + elem.dataset.domainid + '?hours=72')
            .then(r => r.json())
            .then(data => {
                // group data by time_slice, and keep the max success_rate
                var grouped_success_rate = {};
                for (var i = 0; i < data.length; i++) {
                    var item = data[i];
                    if (item.success_rate == null) {
                        continue;
                    } 

                    if (grouped_success_rate[item.time_slice] == undefined) {
                        grouped_success_rate[item.time_slice] = 0;
                    }

                    grouped_success_rate[item.time_slice] = Math.max(grouped_success_rate[item.time_slice], item.success_rate);
                }
                
                var success_rates = [];
                for (var key in grouped_success_rate) {
                    success_rates.push({
                        time_slice: key,
                        success_rate: grouped_success_rate[key]
                    });
                }

                var sum = 0;
                var count = 0;
                for (var i = 0; i < success_rates.length; i++) {
                    var item = success_rates[i];
                    sum += item.success_rate;
                    count += 1;
                }

                if (count == 0) {
                    elem.innerText = '-';
                    elem.classList.remove('spinner');
                    return;
                }

                var avg_percent = Math.round(sum / count * 100);
                elem.innerText = avg_percent + '%';
                elem.classList.remove('spinner');
            });
    });
</script>
{% endif %}

<script>
    document.querySelectorAll('.ip-flag').forEach(elem => {
        var country = localStorage.getItem('ip-country-' + elem.dataset.ip);
        if (country) {
            country = JSON.parse(country);
            elem.classList.add('fi-' + country.country_code.toLowerCase());
            return;
        }

        fetch('https://ipapi.co/' + elem.dataset.ip + '/json/')
            .then(r => r.json())
            .then(data => {
                elem.classList.add('fi-' + data.country_code.toLowerCase());
                localStorage.setItem('ip-country-' + elem.dataset.ip, JSON.stringify(data));
            });
    });
</script>

{% endblock %}
